{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","state","className","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAgDeA,MAzCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,cAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAWP,GACnBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,WAPR,SAUI,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKO,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BP,IAC/B,oBAAIO,UAAU,cAAd,SAA6BR,IAC7B,oBAAIQ,UAAU,gBAAd,SACKJ,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAKjB,oBAAGL,UAAU,iBAAb,UAA+BN,EAAQY,MAAM,EAAG,KAAhD,kBC1BdC,G,kNACJR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,uDAUZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKjB,MAA3BS,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OAIE,aAHA,CAGA,WAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GAlCR4B,IAAMC,YAmDVb,IClDAc,MAJf,WACI,OAAO,uFCSLC,E,uKACF,WACI,MAA8BN,KAAKO,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAGIC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,oBAGrB,WAEI,IAAQH,EAAaR,KAAKO,MAAlBC,SACR,OAAIA,EAASzB,MACF,+BAAOyB,EAASzB,MAAMN,QAEtB,S,GAfE0B,IAAMC,WAsBZE,I,MCtBAM,MATf,WACI,OACI,sBAAK5B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCcGgC,MAZf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAWX,IAChC,cAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,QCR1CW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82426e3c.chunk.js","sourcesContent":["// we are gonna render movie here\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./Movie.css\";\n\n\n//movies component는 state를 필요로 하지 않기 때문에 클래스컴포넌트로 할 필요가 없다.\nfunction Movie({ id, year, title, summary, poster, genres }) {\n    return (\n        <Link to={{\n            pathname:`/movie/${id}`,\n            state: {\n                year,\n                title,\n                summary,\n                poster,\n                genres\n            }\n        }}>\n            <div className=\"movie\">\n                <img src={poster} alt={title} title={title} />\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\" >{title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genres\">\n                        {genres.map((genre, index) => (\n                            <li key={index} className=\"movie__genres\">\n                                {genre}\n                            </li>\n                        ))}\n                    </ul>\n                    <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n                </div>\n            </div>\n        </Link>\n    );\n}\n\n// propType은 protection이야\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false })//({movies:movies})원래 이런형식이고 one from state, the other from axios\n\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state; //this.state.isLoading 매번 하기 귀찮아서\n    return (\n      /* 여기 원래 <section class=\"container\"> 이랬는데 그냥 class하면 \n        javascript안에서는 component class에 의해 리액트가 혼란스러워져서 className으로 바꿈\n      */\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n\n}\n\nexport default Home;","import App from \"../App\";\n\nfunction About(){\n    return <span>About this page: I built it because I love movies.</span>;\n}\n\nexport default About; ","\n\n/* 이렇게 했었는데 문제점이 클릭을 해야지만 디테일에 접근할 수가 있어서\n    class component로 만들어줌\nfunction Detail({location}){\n    console.log(location);\n    return <span>Hello</span>;\n}\n */\n\nimport React from \"react\";\n\nclass Detail extends React.Component{\n    componentDidMount(){\n        const { location, history } = this.props;\n        // 사용자가 url로 접근하는 것을 리다이렉트 \n        // 디테일 페이지는 무조건 클릭으로만 접근 하게끔\n        if(location.state === undefined ){\n            history.push(\"/\");\n        }\n    }\n    render(){\n        //const { location } = this.props; 그냥 하니까 location없다고 에러뜸 \n        const { location } = this.props;  \n        if (location.state){\n            return <span>{location.state.title}</span>;\n        } else {\n            return null;  \n        }\n\n    }\n}\n\n\nexport default Detail;","import { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation(){\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","// #6 4 Redirecting\n\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n//react application은 하나의 component만을 redering해야하기 때문에 App.js말고 다른걸 여기에 추가 할 수는 없다\n// App.js에 추가 가능하다\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}